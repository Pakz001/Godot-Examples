[gd_scene load_steps=5 format=2]

[sub_resource type="GDScript" id=1]

script/source = "extends RigidBody

# A variable to store how long the sphere has been in the scene.
var life_timer = 0;
# A constant variable to store the maximum length a sphere can be in the scene.
const LIFE_TIME = 6;

# A constant variable to hold the amount of force the sphere is thrown at when it
# is created.
const STARTING_FORCE = 14;


func _ready():
	# Throw the sphere towards its negative Z axis.
	apply_impulse(Vector3(0,0,0), -global_transform.basis.z.normalized() * STARTING_FORCE);


func _physics_process(delta):
	# Add delta to life_timer.
	life_timer += delta;
	
	# If life_timer is equal or more than LIFE_TIME, then free/destroy the sphere.
	if (life_timer >= LIFE_TIME):
		queue_free();
"

[sub_resource type="SphereMesh" id=2]

custom_aabb = AABB( 0, 0, 0, 0, 0, 0 )
radius = 0.5
height = 1.0
radial_segments = 32
rings = 16
is_hemisphere = false

[sub_resource type="SpatialMaterial" id=3]

render_priority = 0
flags_transparent = false
flags_unshaded = false
flags_vertex_lighting = false
flags_no_depth_test = false
flags_use_point_size = false
flags_world_triplanar = false
flags_fixed_size = false
flags_albedo_tex_force_srgb = false
vertex_color_use_as_albedo = false
vertex_color_is_srgb = false
params_diffuse_mode = 0
params_specular_mode = 0
params_blend_mode = 0
params_cull_mode = 0
params_depth_draw_mode = 0
params_line_width = 1.0
params_point_size = 1.0
params_billboard_mode = 0
params_grow = false
params_use_alpha_scissor = false
albedo_color = Color( 1, 0, 0, 1 )
metallic = 0.5
metallic_specular = 0.5
metallic_texture_channel = 0
roughness = 0.1
roughness_texture_channel = 0
emission_enabled = false
normal_enabled = false
rim_enabled = false
clearcoat_enabled = false
anisotropy_enabled = false
ao_enabled = false
depth_enabled = false
subsurf_scatter_enabled = false
transmission_enabled = false
refraction_enabled = false
detail_enabled = false
uv1_scale = Vector3( 1, 1, 1 )
uv1_offset = Vector3( 0, 0, 0 )
uv1_triplanar = false
uv1_triplanar_sharpness = 1.0
uv2_scale = Vector3( 1, 1, 1 )
uv2_offset = Vector3( 0, 0, 0 )
uv2_triplanar = false
uv2_triplanar_sharpness = 1.0
proximity_fade_enable = false
distance_fade_enable = false
_sections_unfolded = [ "Metallic" ]

[sub_resource type="SphereShape" id=4]

radius = 0.5

[node name="Rigid_Sphere" type="RigidBody"]

input_ray_pickable = true
input_capture_on_drag = false
collision_layer = 1
collision_mask = 1
mode = 0
mass = 1.0
friction = 1.0
bounce = 0.0
gravity_scale = 1.0
custom_integrator = false
continuous_cd = false
contacts_reported = 0
contact_monitor = false
sleeping = false
can_sleep = false
axis_lock_linear_x = false
axis_lock_linear_y = false
axis_lock_linear_z = false
axis_lock_angular_x = false
axis_lock_angular_y = false
axis_lock_angular_z = false
linear_velocity = Vector3( 0, 0, 0 )
linear_damp = -1.0
angular_velocity = Vector3( 0, 0, 0 )
angular_damp = -1.0
script = SubResource( 1 )

[node name="MeshInstance" type="MeshInstance" parent="." index="0"]

layers = 1
material_override = null
cast_shadow = 1
extra_cull_margin = 0.0
use_in_baked_light = false
lod_min_distance = 0.0
lod_min_hysteresis = 0.0
lod_max_distance = 0.0
lod_max_hysteresis = 0.0
mesh = SubResource( 2 )
skeleton = NodePath("..")
material/0 = SubResource( 3 )
_sections_unfolded = [ "material" ]

[node name="CollisionShape" type="CollisionShape" parent="." index="1"]

shape = SubResource( 4 )
disabled = false


